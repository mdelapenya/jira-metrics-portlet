/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.jira.metrics.model.impl;

import com.liferay.jira.metrics.model.JiraPriority;
import com.liferay.jira.metrics.model.JiraPriorityModel;
import com.liferay.jira.metrics.model.JiraPrioritySoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the JiraPriority service. Represents a row in the &quot;jirametrics_JiraPriority&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.jira.metrics.model.JiraPriorityModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JiraPriorityImpl}.
 * </p>
 *
 * @author Manuel de la Pe√±a
 * @see JiraPriorityImpl
 * @see com.liferay.jira.metrics.model.JiraPriority
 * @see com.liferay.jira.metrics.model.JiraPriorityModel
 * @generated
 */
@JSON(strict = true)
public class JiraPriorityModelImpl extends BaseModelImpl<JiraPriority>
	implements JiraPriorityModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a jira priority model instance should use the {@link com.liferay.jira.metrics.model.JiraPriority} interface instead.
	 */
	public static final String TABLE_NAME = "jirametrics_JiraPriority";
	public static final Object[][] TABLE_COLUMNS = {
			{ "jiraPriorityId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "value", Types.VARCHAR },
			{ "name", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table jirametrics_JiraPriority (jiraPriorityId LONG not null primary key,createDate DATE null,modifiedDate DATE null,value VARCHAR(75) null,name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table jirametrics_JiraPriority";
	public static final String ORDER_BY_JPQL = " ORDER BY jiraPriority.value ASC";
	public static final String ORDER_BY_SQL = " ORDER BY jirametrics_JiraPriority.value ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.jira.metrics.model.JiraPriority"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.jira.metrics.model.JiraPriority"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.jira.metrics.model.JiraPriority"),
			true);
	public static long NAME_COLUMN_BITMASK = 1L;
	public static long VALUE_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static JiraPriority toModel(JiraPrioritySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		JiraPriority model = new JiraPriorityImpl();

		model.setJiraPriorityId(soapModel.getJiraPriorityId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setValue(soapModel.getValue());
		model.setName(soapModel.getName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<JiraPriority> toModels(JiraPrioritySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<JiraPriority> models = new ArrayList<JiraPriority>(soapModels.length);

		for (JiraPrioritySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.jira.metrics.model.JiraPriority"));

	public JiraPriorityModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jiraPriorityId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJiraPriorityId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jiraPriorityId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JiraPriority.class;
	}

	@Override
	public String getModelClassName() {
		return JiraPriority.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("jiraPriorityId", getJiraPriorityId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("value", getValue());
		attributes.put("name", getName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long jiraPriorityId = (Long)attributes.get("jiraPriorityId");

		if (jiraPriorityId != null) {
			setJiraPriorityId(jiraPriorityId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String value = (String)attributes.get("value");

		if (value != null) {
			setValue(value);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}
	}

	@JSON
	@Override
	public long getJiraPriorityId() {
		return _jiraPriorityId;
	}

	@Override
	public void setJiraPriorityId(long jiraPriorityId) {
		_jiraPriorityId = jiraPriorityId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getValue() {
		if (_value == null) {
			return StringPool.BLANK;
		}
		else {
			return _value;
		}
	}

	@Override
	public void setValue(String value) {
		_columnBitmask = -1L;

		if (_originalValue == null) {
			_originalValue = _value;
		}

		_value = value;
	}

	public String getOriginalValue() {
		return GetterUtil.getString(_originalValue);
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			JiraPriority.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JiraPriority toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (JiraPriority)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JiraPriorityImpl jiraPriorityImpl = new JiraPriorityImpl();

		jiraPriorityImpl.setJiraPriorityId(getJiraPriorityId());
		jiraPriorityImpl.setCreateDate(getCreateDate());
		jiraPriorityImpl.setModifiedDate(getModifiedDate());
		jiraPriorityImpl.setValue(getValue());
		jiraPriorityImpl.setName(getName());

		jiraPriorityImpl.resetOriginalValues();

		return jiraPriorityImpl;
	}

	@Override
	public int compareTo(JiraPriority jiraPriority) {
		int value = 0;

		value = getValue().compareTo(jiraPriority.getValue());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof JiraPriority)) {
			return false;
		}

		JiraPriority jiraPriority = (JiraPriority)obj;

		long primaryKey = jiraPriority.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		JiraPriorityModelImpl jiraPriorityModelImpl = this;

		jiraPriorityModelImpl._originalValue = jiraPriorityModelImpl._value;

		jiraPriorityModelImpl._originalName = jiraPriorityModelImpl._name;

		jiraPriorityModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<JiraPriority> toCacheModel() {
		JiraPriorityCacheModel jiraPriorityCacheModel = new JiraPriorityCacheModel();

		jiraPriorityCacheModel.jiraPriorityId = getJiraPriorityId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			jiraPriorityCacheModel.createDate = createDate.getTime();
		}
		else {
			jiraPriorityCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jiraPriorityCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jiraPriorityCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jiraPriorityCacheModel.value = getValue();

		String value = jiraPriorityCacheModel.value;

		if ((value != null) && (value.length() == 0)) {
			jiraPriorityCacheModel.value = null;
		}

		jiraPriorityCacheModel.name = getName();

		String name = jiraPriorityCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			jiraPriorityCacheModel.name = null;
		}

		return jiraPriorityCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(11);

		sb.append("{jiraPriorityId=");
		sb.append(getJiraPriorityId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", value=");
		sb.append(getValue());
		sb.append(", name=");
		sb.append(getName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(19);

		sb.append("<model><model-name>");
		sb.append("com.liferay.jira.metrics.model.JiraPriority");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>jiraPriorityId</column-name><column-value><![CDATA[");
		sb.append(getJiraPriorityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>value</column-name><column-value><![CDATA[");
		sb.append(getValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = JiraPriority.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			JiraPriority.class
		};
	private long _jiraPriorityId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _value;
	private String _originalValue;
	private String _name;
	private String _originalName;
	private long _columnBitmask;
	private JiraPriority _escapedModel;
}