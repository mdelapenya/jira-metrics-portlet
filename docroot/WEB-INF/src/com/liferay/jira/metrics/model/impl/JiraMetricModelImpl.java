/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.jira.metrics.model.impl;

import com.liferay.jira.metrics.model.JiraMetric;
import com.liferay.jira.metrics.model.JiraMetricModel;
import com.liferay.jira.metrics.model.JiraMetricSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the JiraMetric service. Represents a row in the &quot;jirametrics_JiraMetric&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.jira.metrics.model.JiraMetricModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link JiraMetricImpl}.
 * </p>
 *
 * @author Manuel de la Pe√±a
 * @see JiraMetricImpl
 * @see com.liferay.jira.metrics.model.JiraMetric
 * @see com.liferay.jira.metrics.model.JiraMetricModel
 * @generated
 */
@JSON(strict = true)
public class JiraMetricModelImpl extends BaseModelImpl<JiraMetric>
	implements JiraMetricModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a jira metric model instance should use the {@link com.liferay.jira.metrics.model.JiraMetric} interface instead.
	 */
	public static final String TABLE_NAME = "jirametrics_JiraMetric";
	public static final Object[][] TABLE_COLUMNS = {
			{ "jiraMetricId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "jiraProjectId", Types.BIGINT },
			{ "jiraComponentId", Types.BIGINT },
			{ "jiraStatusId", Types.BIGINT },
			{ "priority", Types.INTEGER },
			{ "day", Types.INTEGER },
			{ "month", Types.INTEGER },
			{ "year", Types.INTEGER },
			{ "total", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table jirametrics_JiraMetric (jiraMetricId LONG not null primary key,createDate DATE null,modifiedDate DATE null,jiraProjectId LONG,jiraComponentId LONG,jiraStatusId LONG,priority INTEGER,day INTEGER,month INTEGER,year INTEGER,total INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table jirametrics_JiraMetric";
	public static final String ORDER_BY_JPQL = " ORDER BY jiraMetric.jiraMetricId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY jirametrics_JiraMetric.jiraMetricId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.jira.metrics.model.JiraMetric"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.jira.metrics.model.JiraMetric"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.liferay.jira.metrics.model.JiraMetric"),
			true);
	public static long DAY_COLUMN_BITMASK = 1L;
	public static long JIRACOMPONENTID_COLUMN_BITMASK = 2L;
	public static long JIRAPROJECTID_COLUMN_BITMASK = 4L;
	public static long JIRASTATUSID_COLUMN_BITMASK = 8L;
	public static long MONTH_COLUMN_BITMASK = 16L;
	public static long PRIORITY_COLUMN_BITMASK = 32L;
	public static long YEAR_COLUMN_BITMASK = 64L;
	public static long JIRAMETRICID_COLUMN_BITMASK = 128L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static JiraMetric toModel(JiraMetricSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		JiraMetric model = new JiraMetricImpl();

		model.setJiraMetricId(soapModel.getJiraMetricId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setJiraProjectId(soapModel.getJiraProjectId());
		model.setJiraComponentId(soapModel.getJiraComponentId());
		model.setJiraStatusId(soapModel.getJiraStatusId());
		model.setPriority(soapModel.getPriority());
		model.setDay(soapModel.getDay());
		model.setMonth(soapModel.getMonth());
		model.setYear(soapModel.getYear());
		model.setTotal(soapModel.getTotal());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<JiraMetric> toModels(JiraMetricSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<JiraMetric> models = new ArrayList<JiraMetric>(soapModels.length);

		for (JiraMetricSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.jira.metrics.model.JiraMetric"));

	public JiraMetricModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _jiraMetricId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setJiraMetricId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _jiraMetricId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return JiraMetric.class;
	}

	@Override
	public String getModelClassName() {
		return JiraMetric.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("jiraMetricId", getJiraMetricId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("jiraProjectId", getJiraProjectId());
		attributes.put("jiraComponentId", getJiraComponentId());
		attributes.put("jiraStatusId", getJiraStatusId());
		attributes.put("priority", getPriority());
		attributes.put("day", getDay());
		attributes.put("month", getMonth());
		attributes.put("year", getYear());
		attributes.put("total", getTotal());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long jiraMetricId = (Long)attributes.get("jiraMetricId");

		if (jiraMetricId != null) {
			setJiraMetricId(jiraMetricId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long jiraProjectId = (Long)attributes.get("jiraProjectId");

		if (jiraProjectId != null) {
			setJiraProjectId(jiraProjectId);
		}

		Long jiraComponentId = (Long)attributes.get("jiraComponentId");

		if (jiraComponentId != null) {
			setJiraComponentId(jiraComponentId);
		}

		Long jiraStatusId = (Long)attributes.get("jiraStatusId");

		if (jiraStatusId != null) {
			setJiraStatusId(jiraStatusId);
		}

		Integer priority = (Integer)attributes.get("priority");

		if (priority != null) {
			setPriority(priority);
		}

		Integer day = (Integer)attributes.get("day");

		if (day != null) {
			setDay(day);
		}

		Integer month = (Integer)attributes.get("month");

		if (month != null) {
			setMonth(month);
		}

		Integer year = (Integer)attributes.get("year");

		if (year != null) {
			setYear(year);
		}

		Integer total = (Integer)attributes.get("total");

		if (total != null) {
			setTotal(total);
		}
	}

	@JSON
	@Override
	public long getJiraMetricId() {
		return _jiraMetricId;
	}

	@Override
	public void setJiraMetricId(long jiraMetricId) {
		_jiraMetricId = jiraMetricId;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getJiraProjectId() {
		return _jiraProjectId;
	}

	@Override
	public void setJiraProjectId(long jiraProjectId) {
		_columnBitmask |= JIRAPROJECTID_COLUMN_BITMASK;

		if (!_setOriginalJiraProjectId) {
			_setOriginalJiraProjectId = true;

			_originalJiraProjectId = _jiraProjectId;
		}

		_jiraProjectId = jiraProjectId;
	}

	public long getOriginalJiraProjectId() {
		return _originalJiraProjectId;
	}

	@JSON
	@Override
	public long getJiraComponentId() {
		return _jiraComponentId;
	}

	@Override
	public void setJiraComponentId(long jiraComponentId) {
		_columnBitmask |= JIRACOMPONENTID_COLUMN_BITMASK;

		if (!_setOriginalJiraComponentId) {
			_setOriginalJiraComponentId = true;

			_originalJiraComponentId = _jiraComponentId;
		}

		_jiraComponentId = jiraComponentId;
	}

	public long getOriginalJiraComponentId() {
		return _originalJiraComponentId;
	}

	@JSON
	@Override
	public long getJiraStatusId() {
		return _jiraStatusId;
	}

	@Override
	public void setJiraStatusId(long jiraStatusId) {
		_columnBitmask |= JIRASTATUSID_COLUMN_BITMASK;

		if (!_setOriginalJiraStatusId) {
			_setOriginalJiraStatusId = true;

			_originalJiraStatusId = _jiraStatusId;
		}

		_jiraStatusId = jiraStatusId;
	}

	public long getOriginalJiraStatusId() {
		return _originalJiraStatusId;
	}

	@JSON
	@Override
	public int getPriority() {
		return _priority;
	}

	@Override
	public void setPriority(int priority) {
		_columnBitmask |= PRIORITY_COLUMN_BITMASK;

		if (!_setOriginalPriority) {
			_setOriginalPriority = true;

			_originalPriority = _priority;
		}

		_priority = priority;
	}

	public int getOriginalPriority() {
		return _originalPriority;
	}

	@JSON
	@Override
	public int getDay() {
		return _day;
	}

	@Override
	public void setDay(int day) {
		_columnBitmask |= DAY_COLUMN_BITMASK;

		if (!_setOriginalDay) {
			_setOriginalDay = true;

			_originalDay = _day;
		}

		_day = day;
	}

	public int getOriginalDay() {
		return _originalDay;
	}

	@JSON
	@Override
	public int getMonth() {
		return _month;
	}

	@Override
	public void setMonth(int month) {
		_columnBitmask |= MONTH_COLUMN_BITMASK;

		if (!_setOriginalMonth) {
			_setOriginalMonth = true;

			_originalMonth = _month;
		}

		_month = month;
	}

	public int getOriginalMonth() {
		return _originalMonth;
	}

	@JSON
	@Override
	public int getYear() {
		return _year;
	}

	@Override
	public void setYear(int year) {
		_columnBitmask |= YEAR_COLUMN_BITMASK;

		if (!_setOriginalYear) {
			_setOriginalYear = true;

			_originalYear = _year;
		}

		_year = year;
	}

	public int getOriginalYear() {
		return _originalYear;
	}

	@JSON
	@Override
	public int getTotal() {
		return _total;
	}

	@Override
	public void setTotal(int total) {
		_total = total;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			JiraMetric.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public JiraMetric toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (JiraMetric)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		JiraMetricImpl jiraMetricImpl = new JiraMetricImpl();

		jiraMetricImpl.setJiraMetricId(getJiraMetricId());
		jiraMetricImpl.setCreateDate(getCreateDate());
		jiraMetricImpl.setModifiedDate(getModifiedDate());
		jiraMetricImpl.setJiraProjectId(getJiraProjectId());
		jiraMetricImpl.setJiraComponentId(getJiraComponentId());
		jiraMetricImpl.setJiraStatusId(getJiraStatusId());
		jiraMetricImpl.setPriority(getPriority());
		jiraMetricImpl.setDay(getDay());
		jiraMetricImpl.setMonth(getMonth());
		jiraMetricImpl.setYear(getYear());
		jiraMetricImpl.setTotal(getTotal());

		jiraMetricImpl.resetOriginalValues();

		return jiraMetricImpl;
	}

	@Override
	public int compareTo(JiraMetric jiraMetric) {
		long primaryKey = jiraMetric.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof JiraMetric)) {
			return false;
		}

		JiraMetric jiraMetric = (JiraMetric)obj;

		long primaryKey = jiraMetric.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		JiraMetricModelImpl jiraMetricModelImpl = this;

		jiraMetricModelImpl._originalJiraProjectId = jiraMetricModelImpl._jiraProjectId;

		jiraMetricModelImpl._setOriginalJiraProjectId = false;

		jiraMetricModelImpl._originalJiraComponentId = jiraMetricModelImpl._jiraComponentId;

		jiraMetricModelImpl._setOriginalJiraComponentId = false;

		jiraMetricModelImpl._originalJiraStatusId = jiraMetricModelImpl._jiraStatusId;

		jiraMetricModelImpl._setOriginalJiraStatusId = false;

		jiraMetricModelImpl._originalPriority = jiraMetricModelImpl._priority;

		jiraMetricModelImpl._setOriginalPriority = false;

		jiraMetricModelImpl._originalDay = jiraMetricModelImpl._day;

		jiraMetricModelImpl._setOriginalDay = false;

		jiraMetricModelImpl._originalMonth = jiraMetricModelImpl._month;

		jiraMetricModelImpl._setOriginalMonth = false;

		jiraMetricModelImpl._originalYear = jiraMetricModelImpl._year;

		jiraMetricModelImpl._setOriginalYear = false;

		jiraMetricModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<JiraMetric> toCacheModel() {
		JiraMetricCacheModel jiraMetricCacheModel = new JiraMetricCacheModel();

		jiraMetricCacheModel.jiraMetricId = getJiraMetricId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			jiraMetricCacheModel.createDate = createDate.getTime();
		}
		else {
			jiraMetricCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			jiraMetricCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			jiraMetricCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		jiraMetricCacheModel.jiraProjectId = getJiraProjectId();

		jiraMetricCacheModel.jiraComponentId = getJiraComponentId();

		jiraMetricCacheModel.jiraStatusId = getJiraStatusId();

		jiraMetricCacheModel.priority = getPriority();

		jiraMetricCacheModel.day = getDay();

		jiraMetricCacheModel.month = getMonth();

		jiraMetricCacheModel.year = getYear();

		jiraMetricCacheModel.total = getTotal();

		return jiraMetricCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{jiraMetricId=");
		sb.append(getJiraMetricId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", jiraProjectId=");
		sb.append(getJiraProjectId());
		sb.append(", jiraComponentId=");
		sb.append(getJiraComponentId());
		sb.append(", jiraStatusId=");
		sb.append(getJiraStatusId());
		sb.append(", priority=");
		sb.append(getPriority());
		sb.append(", day=");
		sb.append(getDay());
		sb.append(", month=");
		sb.append(getMonth());
		sb.append(", year=");
		sb.append(getYear());
		sb.append(", total=");
		sb.append(getTotal());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.liferay.jira.metrics.model.JiraMetric");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>jiraMetricId</column-name><column-value><![CDATA[");
		sb.append(getJiraMetricId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jiraProjectId</column-name><column-value><![CDATA[");
		sb.append(getJiraProjectId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jiraComponentId</column-name><column-value><![CDATA[");
		sb.append(getJiraComponentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>jiraStatusId</column-name><column-value><![CDATA[");
		sb.append(getJiraStatusId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priority</column-name><column-value><![CDATA[");
		sb.append(getPriority());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>day</column-name><column-value><![CDATA[");
		sb.append(getDay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>month</column-name><column-value><![CDATA[");
		sb.append(getMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>year</column-name><column-value><![CDATA[");
		sb.append(getYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>total</column-name><column-value><![CDATA[");
		sb.append(getTotal());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = JiraMetric.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			JiraMetric.class
		};
	private long _jiraMetricId;
	private Date _createDate;
	private Date _modifiedDate;
	private long _jiraProjectId;
	private long _originalJiraProjectId;
	private boolean _setOriginalJiraProjectId;
	private long _jiraComponentId;
	private long _originalJiraComponentId;
	private boolean _setOriginalJiraComponentId;
	private long _jiraStatusId;
	private long _originalJiraStatusId;
	private boolean _setOriginalJiraStatusId;
	private int _priority;
	private int _originalPriority;
	private boolean _setOriginalPriority;
	private int _day;
	private int _originalDay;
	private boolean _setOriginalDay;
	private int _month;
	private int _originalMonth;
	private boolean _setOriginalMonth;
	private int _year;
	private int _originalYear;
	private boolean _setOriginalYear;
	private int _total;
	private long _columnBitmask;
	private JiraMetric _escapedModel;
}